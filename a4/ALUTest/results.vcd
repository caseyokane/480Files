$date
	Tue May  3 20:26:37 2016
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module alu_tb $end
$var wire 16 ! z [15:0] $end
$var reg 5 " ALUop [4:0] $end
$var reg 16 # X [15:0] $end
$var reg 16 $ Y [15:0] $end
$var reg 16 % Z [15:0] $end
$var integer 32 & correct [31:0] $end
$var integer 32 ' failed [31:0] $end
$var integer 32 ( test_num [31:0] $end
$var integer 32 ) test_num_max [31:0] $end
$scope function disp $end
$var reg 1 * disp $end
$var reg 1 + x $end
$var reg 1 , y $end
$var reg 1 - z $end
$upscope $end
$scope module aluuut $end
$var wire 16 . in1 [15:0] $end
$var wire 16 / in2 [15:0] $end
$var wire 5 0 numZero [4:0] $end
$var wire 5 1 op [4:0] $end
$var reg 16 2 absValue [15:0] $end
$var reg 9 3 bgMant [8:0] $end
$var reg 16 4 bgVal [15:0] $end
$var reg 16 5 diff [15:0] $end
$var reg 8 6 expVal [7:0] $end
$var reg 8 7 expVal1 [7:0] $end
$var reg 8 8 expVal2 [7:0] $end
$var reg 7 9 mantissa [6:0] $end
$var reg 16 : result [15:0] $end
$var reg 9 ; rsltMant [8:0] $end
$var reg 1 < signBit $end
$var reg 9 = smMant [8:0] $end
$var reg 16 > smVal [15:0] $end
$var reg 8 ? tem1 [7:0] $end
$var reg 8 @ tem2 [7:0] $end
$var reg 16 A temV [15:0] $end
$var reg 16 B tempResult [15:0] $end
$var reg 24 C valueNew [23:0] $end
$scope module findZeros $end
$var wire 16 D s [15:0] $end
$var reg 5 E d [4:0] $end
$var reg 2 F s2 [1:0] $end
$var reg 4 G s4 [3:0] $end
$var reg 8 H s8 [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b11 H
b11 G
b11 F
b1110 E
b11 D
b1100000000 C
b11 B
bx A
bx @
bx ?
bx >
bx =
0<
bx ;
b100000001000000 :
b1000000 9
bx 8
bx 7
b10000000 6
bx 5
bx 4
bx 3
b11 2
b1011 1
b1110 0
b0 /
b11 .
x-
x,
x+
x*
b10100 )
b0 (
b0 '
b0 &
bx %
b0 $
b11 #
b1011 "
b100000001000000 !
$end
#1000
b100000001000000 %
#2000
b1100000001000000 :
b1100000001000000 !
1<
b1111111111111101 #
b1111111111111101 .
b1 (
b1 &
#3000
b1100000001000000 %
#4000
b10000101 6
b1 F
b1001 0
b110 G
b1100100 H
b1001 E
b1001000 9
b110010000000000 C
b1100100 B
b1100100 2
b1100100 D
b100001011001000 :
b100001011001000 !
0<
b1100100 #
b1100100 .
b10 (
b10 &
#5000
b100001011001000 %
#6000
b1100001011001000 :
b1100001011001000 !
1<
b1111111110011100 #
b1111111110011100 .
b11 (
b11 &
#7000
b1100001011001000 %
#8000
b100 G
b1 0
b1000000 H
b1 E
b100000001000000 2
b100000001000000 D
b11 :
b11 !
b1 6
b1100000000 C
b1010 "
b1010 1
b100000001000000 #
b100000001000000 .
b100 (
b100 &
#9000
b11 %
#10000
b10 0
b11 F
b11 G
b111111 H
b10 E
b11111111000000 2
b11111111000000 D
b1111111111111101 :
b1111111111111101 !
b1100000000 C
b1100000001000000 #
b1100000001000000 .
b101 (
b101 &
#11000
b1111111111111101 %
#12000
b1 0
b1 F
b100 G
b1000010 H
b1 E
b100001011001000 2
b100001011001000 D
b1100100 :
b1100100 !
b110 6
b110010000000000 C
b100001011001000 #
b100001011001000 .
b110 (
b110 &
#13000
b1100100 %
#14000
b10 0
b11 F
b11 G
b111101 H
b10 E
b11110100111000 2
b11110100111000 D
b1111111110011100 :
b1111111110011100 !
b110010000000000 C
b1100001011001000 #
b1100001011001000 .
b111 (
b111 &
#15000
b1111111110011100 %
#16000
b111111 H
b10 E
b11111111000000 2
b11111111000000 D
b100000001000000 :
b100000001000000 !
b10000000 6
b1000000 9
b10000000 8
b1111111 7
b1001000000000000 A
b11000000 @
b11000000 ?
0<
b11 "
b11 1
b100000000000000 $
b100000000000000 /
b11111111000000 #
b11111111000000 .
b1000 (
b1000 &
#17000
b100000001000000 %
#18000
b1100000001000000 :
b1100000001000000 !
1<
b1100000000000000 $
b1100000000000000 /
b1001 (
b1001 &
#19000
b1100000001000000 %
#20000
b10 E
b11111100000000 2
b11111100000000 D
b11111010000000 :
b11111010000000 !
b1111101 6
b0 9
b1111110 8
b1111110 7
b100000000000000 A
b10000000 @
b10000000 ?
0<
b11111100000000 $
b11111100000000 /
b11111100000000 #
b11111100000000 .
b1010 (
b1010 &
#21000
b11111010000000 %
#22000
b100001000000000 :
b100001000000000 !
b10000100 6
b10000101 8
b100001011001000 $
b100001011001000 /
b1011 (
b1011 &
#23000
b100001000000000 %
#24000
b10000 E
b10000 0
b0 2
b0 D
b0 :
b0 !
b11111110 6
b0 B
b1 "
b1 1
b0 $
b0 /
b0 #
b0 .
b1100 (
b1 '
#25000
b0 %
#26000
b10 E
b10 0
b100000000000000 :
b100000000000000 !
b10000000 6
b11111100000000 B
b11111100000000 2
b11111100000000 D
b11111100000000 #
b11111100000000 .
b1101 (
b1100 &
#27000
b100000000000000 %
#28000
b1 0
b1 F
b100 G
b1000000 H
b1 E
b1111110 6
b100000000000000 B
b100000000000000 2
b100000000000000 D
b1011111100000000 :
b1011111100000000 !
1<
b1100000000000000 #
b1100000000000000 .
b1110 (
b1101 &
#29000
b1011111100000000 %
#30000
b1000001 H
b1 E
b1111011 6
b1001100 9
b100000100100000 B
b100000100100000 2
b100000100100000 D
b11110111001100 :
b11110111001100 !
0<
b100000100100000 #
b100000100100000 .
b1111 (
b1110 &
#31000
b11110111001100 %
#32000
b1000000 H
b1 E
b100000001100000 2
b100000001100000 D
b100000001100000 :
b100000001100000 !
b10 "
b10 1
b100000001100000 #
b100000001100000 .
b10000 (
b1111 &
#33000
b100000001100000 %
#34000
b10000 E
b10000 0
b0 2
b0 D
b100000001100000 $
b100000001100000 /
b0 #
b0 .
b10001 (
b10000 &
#36000
b11 F
b11 G
b111111 H
b10 E
b10 0
b11111110100000 2
b11111110100000 D
b0 :
b0 !
b1100000001100000 #
b1100000001100000 .
b10010 (
b10001 &
#37000
b0 %
#38000
b1 0
b1 F
b100 G
b1000000 H
b1 E
b100000001100000 2
b100000001100000 D
b100000110010100 :
b100000110010100 !
b10100 9
b10000011 6
b101000 ;
b11001000 5
b0 =
b101000 3
b100000001100000 >
b100000100101000 4
b100000100101000 $
b100000100101000 /
b100000001100000 #
b100000001100000 .
b10011 (
b10010 &
#39000
b100000110010100 %
#40000
b10100 (
b10 '
